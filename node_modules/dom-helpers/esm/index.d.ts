import activeElement from 'dom-helpers/esm/activeElement';
import addClass from 'dom-helpers/esm/addClass';
import addEventListener from 'dom-helpers/esm/addEventListener';
import { cancel as cancelAnimationFrame, request as requestAnimationFrame } from 'dom-helpers/esm/animationFrame';
import closest from 'dom-helpers/esm/closest';
import contains from 'dom-helpers/esm/contains';
import style from 'dom-helpers/esm/css';
import filter from 'dom-helpers/esm/filterEventHandler';
import hasClass from 'dom-helpers/esm/hasClass';
import height from 'dom-helpers/esm/height';
import listen from 'dom-helpers/esm/listen';
import matches from 'dom-helpers/esm/matches';
import offset from 'dom-helpers/esm/offset';
import offsetParent from 'dom-helpers/esm/offsetParent';
import ownerDocument from 'dom-helpers/esm/ownerDocument';
import ownerWindow from 'dom-helpers/esm/ownerWindow';
import position from 'dom-helpers/esm/position';
import querySelectorAll from 'dom-helpers/esm/querySelectorAll';
import removeClass from 'dom-helpers/esm/removeClass';
import removeEventListener from 'dom-helpers/esm/removeEventListener';
import scrollParent from 'dom-helpers/esm/scrollParent';
import scrollTop from 'dom-helpers/esm/scrollTop';
import toggleClass from 'dom-helpers/esm/toggleClass';
import width from 'dom-helpers/esm/width';
export { addEventListener, removeEventListener, filter, listen, style, activeElement, ownerDocument, ownerWindow, requestAnimationFrame, cancelAnimationFrame, matches, height, width, offset, offsetParent, position, contains, scrollParent, scrollTop, querySelectorAll, closest, addClass, removeClass, hasClass, toggleClass, };
declare const _default: {
    addEventListener: typeof addEventListener;
    removeEventListener: typeof removeEventListener;
    filter: typeof filter;
    listen: typeof listen;
    style: typeof style;
    activeElement: typeof activeElement;
    ownerDocument: typeof ownerDocument;
    ownerWindow: typeof ownerWindow;
    requestAnimationFrame: (callback: FrameRequestCallback) => number;
    cancelAnimationFrame: (id: number) => void;
    matches: typeof matches;
    height: typeof height;
    width: typeof width;
    offset: typeof offset;
    offsetParent: typeof offsetParent;
    position: typeof position;
    contains: typeof contains;
    scrollParent: typeof scrollParent;
    scrollTop: {
        (node: Element): number;
        (node: Element, val: number): undefined;
    };
    querySelectorAll: typeof querySelectorAll;
    closest: typeof closest;
    addClass: typeof addClass;
    removeClass: typeof removeClass;
    hasClass: typeof hasClass;
    toggleClass: typeof toggleClass;
};
export default _default;
